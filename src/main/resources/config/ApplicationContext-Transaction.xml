<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd" default-lazy-init="true">
    <description>Spring-Mybatis配置</description>
    <!--  ============== Mybatis配置 =================  -->
    <!--  配置sqlSessionFactory  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="DataSource" />
        <property name="mapperLocations">
            <list>
                <!--<value>classpath:com/xblog/domain/*/entity/*Mapper.xml</value>-->
                <value>classpath:com/xblog/domain/article/entity/ArticleMapper.xml</value>
                <value>classpath:com/xblog/domain/article/entity/ArticleContentMapper.xml</value>
            </list>
        </property>
    </bean>
    <!--  配置扫描器  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--  扫描dao包及其子包下的所有映射接口类  -->
        <property name="basePackage" value="com.xblog.domain.*.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!--  ===========================================  -->
    <!--  ============== Spring事务配置 ===============  -->
    <!-- Spring事务管理器  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="DataSource"/>
    </bean>
    <!-- 注解方式配置事务 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
    <!--  拦截方式配置事务  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="repair*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="delAndRepair*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="get*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="find*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="load*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="search*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="datagrid*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="interceptorPointCuts" expression="execution(* com.xblog.domain.*.service.*Service.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
    </aop:config>
    <!--  ===========================================  -->
    <!--  ===================== 数据源配置 ===============  -->
    <bean name="DataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="name" value="${db.name}" />
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db.initialSize}" />
        <property name="minIdle" value="${db.minIdle}" />
        <property name="maxActive" value="${db.maxActive}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${db.maxWait}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${db.validationQuery}" />
        <property name="testWhileIdle" value="${db.testWhileIdle}" />
        <property name="testOnBorrow" value="${db.testOnBorrow}" />
        <property name="testOnReturn" value="${db.testOnReturn}" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${db.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}" />
        <property name="removeAbandoned" value="${db.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${db.logAbandoned}" />
        <!--<property name="exceptionSorter" value="" />-->
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${db.filters}" />
    </bean>
    <!--  druid监控配置 Spring jdbc  -->
    <!--  ===============================================================  -->
</beans>